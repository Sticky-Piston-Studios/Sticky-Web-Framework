// DO NOT MODIFY THIS FILE - It is autogenerated based on configuration file by Sticky Web Platform Manager

export interface Action {
    Type: string; // Can be more specific based on your application's needs
    DatabaseName: string;
    DatabaseCollectionName: string;
}

export interface Endpoint {
    Name: string;
    Method: string; // Can be more specific, e.g., 'GET' | 'POST' | 'PUT' | 'DELETE'
    Subroute: string | null;
    BodyName: string;
    Action: Action;
}

export interface EndpointBody {
    Name: string;
    Fields: Field[]; // Reusing Field interface from above
}

export interface Field {
    Name: string;
    Type: string; // Can be more specific, e.g., 'Id' | 'String' | 'Int' | 'List<Id>'
}

// --------------------------------------------------------

export class EndpointClass implements Endpoint {
    Name: string;
    Method: 'GET' | 'POST' | 'PUT' | 'DELETE';
    Subroute: string | null;
    BodyName: string;
    Action: Action;

    constructor(
        Name: string,
        Method: 'GET' | 'POST' | 'PUT' | 'DELETE',
        Subroute: string | null,
        BodyName: string,
        Action: Action
    ) {
        this.Name = Name;
        this.Method = Method;
        this.Subroute = Subroute;
        this.BodyName = BodyName;
        this.Action = Action;
    }

    // You can add methods here that use the properties defined
}

const endpoint = new EndpointClass("GetCompany", "GET", "id", "GetCompany", action);

export class EndpointClass 



export async function CallEndpoint()
{

}


